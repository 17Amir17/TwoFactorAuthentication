{"version":3,"sources":["Context/UserContext.tsx","Services/alerts.ts","Services/utils.ts","Networking/api.ts","Components/Homepage.tsx","Components/Login.tsx","Components/TwoFactor.tsx","App.tsx","index.tsx"],"names":["UserContext","createContext","undefined","UserContextProvider","props","useState","user","setUser","image","setImage","username","setUsername","online","setOnline","Provider","value","clearContext","children","goodAlert","title","text","Swal","fire","badAlert","isString","str","String","isObject","obj","validateUser","Error","token","hasTwoFactor","api","axios","create","baseURL","password","a","post","data","message","isAxiosError","response","login","twoFactor","console","log","sendQRAnswer","code","requestTwoFactor","qr","Homepage","Context","useContext","navigate","useNavigate","useEffect","onClick","className","Card","style","width","Img","variant","src","alt","Body","Title","Text","Button","Login","usernameRef","useRef","passwordRef","location","useLocation","loginClick","current","pathname","type","placeholder","ref","register","TwoFactor","codeRef","onSendCode","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6900f9a.chunk.js","sourcesContent":["import React, { createContext, useState, FC } from 'react';\r\nimport { User, UserContextType } from '../Services/types';\r\n\r\nexport const UserContext = createContext<UserContextType | undefined>(\r\n  undefined\r\n);\r\n\r\nexport const UserContextProvider: FC = (props) => {\r\n  const [user, setUser] = useState<User>();\r\n  const [image, setImage] = useState<string>();\r\n  const [username, setUsername] = useState<string>();\r\n  const [online, setOnline] = useState<boolean>();\r\n\r\n  const clearContext = () => {\r\n    setUser(undefined);\r\n    setImage(undefined);\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        user,\r\n        setUser,\r\n        image,\r\n        setImage,\r\n        clearContext,\r\n        online,\r\n        setOnline,\r\n        username,\r\n        setUsername,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","import Swal from 'sweetalert2';\r\n\r\nexport function goodAlert(title: string = '', text: string = '') {\r\n  Swal.fire(title, text, 'success');\r\n}\r\n\r\nexport function badAlert(title: string = '', text: string = '') {\r\n  Swal.fire(title, text, 'error');\r\n}\r\n","import { User } from './types';\r\n\r\nexport function isNumber(num: unknown): num is number {\r\n  return typeof num === 'number' && !isNaN(num);\r\n}\r\n\r\nexport function isString(str: unknown): str is string {\r\n  return typeof str === 'string' || str instanceof String;\r\n}\r\n\r\nexport function isBoolean(bool: unknown): bool is boolean {\r\n  return typeof bool === 'boolean';\r\n}\r\n\r\nexport function isObject(obj: unknown): obj is object {\r\n  return typeof obj === 'object' && obj != null;\r\n}\r\n\r\nexport function isUser(obj: unknown): obj is User {\r\n  return (\r\n    isObject(obj) &&\r\n    'username' in obj &&\r\n    'hasTwoFactor' in obj &&\r\n    'token' in obj\r\n  );\r\n}\r\n\r\nexport function validateUser(user: unknown): User {\r\n  if (isUser(user)) {\r\n    if (!isString(user.username)) throw new Error('Username is not string');\r\n    if (!isString(user.token)) throw new Error('Invalid token');\r\n    if (!isBoolean(user.hasTwoFactor)) throw new Error('Invalid two factor');\r\n    return user;\r\n  }\r\n  throw new Error('Invalid user');\r\n}\r\n","import axios from 'axios';\r\nimport { badAlert, goodAlert } from '../Services/alerts';\r\nimport { User } from '../Services/types';\r\nimport { validateUser } from '../Services/utils';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localHost:3001/',\r\n});\r\n\r\nexport async function register(username: string, password: string) {\r\n  try {\r\n    const response = await api.post('register', {\r\n      username,\r\n      password,\r\n    });\r\n    goodAlert(response.data.message);\r\n    return true;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      badAlert('Oppsies', error.response.data.message);\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function login(username: string, password: string) {\r\n  try {\r\n    const response = await api.post('login', {\r\n      username,\r\n      password,\r\n    });\r\n    if (response.data.message === '2factor') {\r\n      return {\r\n        twoFactor: true,\r\n        username: response.data.username,\r\n      };\r\n    } else {\r\n      goodAlert(response.data.message);\r\n      const user: User = validateUser(response.data.user);\r\n      return user;\r\n    }\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      badAlert('Oopsies', error.response.data.message);\r\n    }\r\n    console.log(error);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function sendQRAnswer(code: string, username: string) {\r\n  try {\r\n    const response = await api.post(`login/qr?code=${code}`, {\r\n      username,\r\n    });\r\n    goodAlert('GG WP', 'You are in!');\r\n    const user: User = validateUser(response.data.user);\r\n    return user;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      badAlert('Oopsies', error.response.data.message);\r\n    }\r\n    console.log(error);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function requestTwoFactor(user: User) {\r\n  try {\r\n    const response = await api.post('register/twofactor', {\r\n      ...user,\r\n    });\r\n    goodAlert('Yay!', response.data.message);\r\n    console.log(response);\r\n\r\n    return response.data.qr;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error) && error.response) {\r\n      badAlert('Oopsies', error.response.data.message);\r\n    }\r\n    console.log(error);\r\n    return false;\r\n  }\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport context from 'react-bootstrap/esm/AccordionContext';\r\nimport { useNavigate } from 'react-router';\r\nimport { UserContext } from '../Context/UserContext';\r\nimport { requestTwoFactor } from '../Networking/api';\r\n\r\nexport default function Homepage() {\r\n  const Context = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (Context) {\r\n      if (!Context.user) {\r\n        navigate('/');\r\n      }\r\n    }\r\n  }, [Context]);\r\n\r\n  const onClick = async () => {\r\n    if (Context && Context.user) {\r\n      const qr = await requestTwoFactor(Context.user);\r\n      if (qr) {\r\n        const user = Context.user;\r\n        user.hasTwoFactor = true;\r\n        Context.setUser(user);\r\n        Context.setImage(qr);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={'homepage'}>\r\n      <h1> Welcome {Context?.user ? Context.user.username : ''}! </h1>\r\n      {Context?.user?.hasTwoFactor ? (\r\n        <Card style={{ width: '18rem' }}>\r\n          <Card.Img variant=\"top\" src={Context.image} alt={'img'} />\r\n          <Card.Body>\r\n            <Card.Title>Your QR Code</Card.Title>\r\n            <Card.Text>Scan the code and save it!</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      ) : (\r\n        <Button variant=\"primary\" onClick={onClick}>\r\n          Use Two Factor!\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useContext, useEffect, useRef } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router';\r\nimport { UserContext } from '../Context/UserContext';\r\nimport { register, login } from '../Networking/api';\r\nimport { isObject } from '../Services/utils';\r\n\r\nexport default function Login() {\r\n  const usernameRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n  const Context = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const registerClick = () => {\r\n    if (usernameRef.current && passwordRef.current)\r\n      register(usernameRef.current.value, passwordRef.current.value);\r\n  };\r\n\r\n  const loginClick = async () => {\r\n    if (usernameRef.current && passwordRef.current) {\r\n      const user = await login(\r\n        usernameRef.current.value,\r\n        passwordRef.current.value\r\n      );\r\n      if (isObject(user) && 'twoFactor' in user) {\r\n        if (Context) {\r\n          Context.setUsername(user.username);\r\n          Context.setOnline(true);\r\n          navigate('twofactor');\r\n        }\r\n      } else if (user) {\r\n        if (Context) {\r\n          Context.setUser(user);\r\n          Context.setOnline(true);\r\n          navigate('homepage');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === '/') {\r\n      if (Context) Context.setOnline(false);\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <div className=\"login-wrapper\">\r\n      <div className=\"login\">\r\n        <h3>Sign In</h3>\r\n        <div className=\"form-group\">\r\n          <label>Username</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter username\"\r\n            ref={usernameRef}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter password\"\r\n            ref={passwordRef}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"btns\">\r\n          <button className=\"btn btn-primary btn-block\" onClick={loginClick}>\r\n            Login\r\n          </button>\r\n          <button className=\"btn btn-primary btn-block\" onClick={registerClick}>\r\n            Register\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useRef } from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router';\r\nimport { UserContext } from '../Context/UserContext';\r\nimport { sendQRAnswer } from '../Networking/api';\r\n\r\nexport function TwoFactor() {\r\n  const codeRef = useRef<HTMLInputElement>(null);\r\n  const Context = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (Context) {\r\n      if (!Context.online) {\r\n        navigate('/');\r\n      }\r\n    }\r\n  }, [Context]);\r\n\r\n  const onSendCode = async () => {\r\n    if (codeRef.current && Context && Context.username) {\r\n      const code = codeRef.current?.value;\r\n      const user = await sendQRAnswer(code, Context.username);\r\n      if (user) {\r\n        if (Context) {\r\n          Context.setUser(user);\r\n          if (user.qr) {\r\n            Context.setImage(user.qr);\r\n          }\r\n          navigate('/homepage');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{ width: '18rem' }}>\r\n        <Card.Body>\r\n          <Card.Title>Two Factor Auth</Card.Title>\r\n          <Card.Text>Enter code from mobile authenticator app</Card.Text>\r\n          <input type=\"text\" placeholder={'code'} ref={codeRef}></input>\r\n          <Button variant=\"primary\" onClick={onSendCode}>\r\n            Send Code\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport Homepage from './Components/Homepage';\r\nimport Login from './Components/Login';\r\nimport { TwoFactor } from './Components/TwoFactor';\r\nimport { UserContextProvider } from './Context/UserContext';\r\nfunction App() {\r\n  return (\r\n    <UserContextProvider>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/twofactor\" element={<TwoFactor />} />\r\n          <Route path=\"/homepage\" element={<Homepage />} />\r\n          <Route path=\"/\" element={<Login />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </UserContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}